*** gunrock/gunrock/util/reduce_device.cuh-dist	2021-11-09 22:06:14.202872711 +0900
--- gunrock/gunrock/util/reduce_device.cuh	2021-11-09 22:09:00.005912315 +0900
***************
*** 77,109 ****
                                 util::Array1D<SizeT, SizeT> &segment_offsets,
                                 ReductionOp reduction_op, InputT initial_value,
                                 cudaStream_t stream = 0,
!                                bool debug_synchronous = false) {
    cudaError_t retval = cudaSuccess;
    size_t request_bytes = 0;
  
    retval = cub::DispatchSegmentedReduce<
!       InputT *, OutputT *, SizeT *, SizeT,
        ReductionOp>::Dispatch(NULL, request_bytes,
                               keys_in.GetPointer(util::DEVICE),
                               keys_out.GetPointer(util::DEVICE), num_segments,
                               segment_offsets.GetPointer(util::DEVICE),
                               segment_offsets.GetPointer(util::DEVICE) + 1,
                               reduction_op, initial_value, stream,
!                              debug_synchronous);
    if (retval) return retval;
  
    retval = cub_temp_space.EnsureSize_(request_bytes, util::DEVICE);
    if (retval) return retval;
  
    retval = cub::DispatchSegmentedReduce<
!       InputT *, OutputT *, SizeT *, SizeT,
        ReductionOp>::Dispatch(cub_temp_space.GetPointer(util::DEVICE),
                               request_bytes, keys_in.GetPointer(util::DEVICE),
                               keys_out.GetPointer(util::DEVICE), num_segments,
                               segment_offsets.GetPointer(util::DEVICE),
                               segment_offsets.GetPointer(util::DEVICE) + 1,
                               reduction_op, initial_value, stream,
!                              debug_synchronous);
    if (retval) return retval;
  
    return retval;
--- 77,109 ----
                                 util::Array1D<SizeT, SizeT> &segment_offsets,
                                 ReductionOp reduction_op, InputT initial_value,
                                 cudaStream_t stream = 0,
!                                bool debug_synchronous = false, int ptx_version = 0) {
    cudaError_t retval = cudaSuccess;
    size_t request_bytes = 0;
  
    retval = cub::DispatchSegmentedReduce<
!       InputT *, OutputT *, SizeT *, SizeT *, SizeT,
        ReductionOp>::Dispatch(NULL, request_bytes,
                               keys_in.GetPointer(util::DEVICE),
                               keys_out.GetPointer(util::DEVICE), num_segments,
                               segment_offsets.GetPointer(util::DEVICE),
                               segment_offsets.GetPointer(util::DEVICE) + 1,
                               reduction_op, initial_value, stream,
!                              debug_synchronous, ptx_version);
    if (retval) return retval;
  
    retval = cub_temp_space.EnsureSize_(request_bytes, util::DEVICE);
    if (retval) return retval;
  
    retval = cub::DispatchSegmentedReduce<
!       InputT *, OutputT *, SizeT *, SizeT *, SizeT,
        ReductionOp>::Dispatch(cub_temp_space.GetPointer(util::DEVICE),
                               request_bytes, keys_in.GetPointer(util::DEVICE),
                               keys_out.GetPointer(util::DEVICE), num_segments,
                               segment_offsets.GetPointer(util::DEVICE),
                               segment_offsets.GetPointer(util::DEVICE) + 1,
                               reduction_op, initial_value, stream,
!                              debug_synchronous, ptx_version);
    if (retval) return retval;
  
    return retval;
*** gunrock/gunrock/util/sort_device.cuh-dist	2021-11-09 22:06:25.926421160 +0900
--- gunrock/gunrock/util/sort_device.cuh	2021-11-09 22:10:18.654019047 +0900
***************
*** 384,390 ****
      util::Array1D<SizeT, ValueT> &values_out, SizeT num_items,
      SizeT num_segments, util::Array1D<SizeT, SizeT> &seg_offsets,
      int begin_bit = 0, int end_bit = sizeof(KeyT) * 8, cudaStream_t stream = 0,
!     bool debug_synchronous = false) {
    cudaError_t retval = cudaSuccess;
  
    cub::DoubleBuffer<KeyT> keys(
--- 384,390 ----
      util::Array1D<SizeT, ValueT> &values_out, SizeT num_items,
      SizeT num_segments, util::Array1D<SizeT, SizeT> &seg_offsets,
      int begin_bit = 0, int end_bit = sizeof(KeyT) * 8, cudaStream_t stream = 0,
!     bool debug_synchronous = false, int ptx_version = 0) {
    cudaError_t retval = cudaSuccess;
  
    cub::DoubleBuffer<KeyT> keys(
***************
*** 396,417 ****
  
    size_t request_bytes = 0;
    retval =
!       cub::DispatchSegmentedRadixSort<false, KeyT, ValueT, SizeT *, SizeT>::
            Dispatch(NULL, request_bytes, keys, values, num_items, num_segments,
                     seg_offsets.GetPointer(util::DEVICE),
                     seg_offsets.GetPointer(util::DEVICE) + 1, begin_bit, end_bit,
!                    false, stream, debug_synchronous);
    if (retval) return retval;
  
    retval = temp_space.EnsureSize_(request_bytes, util::DEVICE);
    if (retval) return retval;
  
    retval = cub::
!       DispatchSegmentedRadixSort<false, KeyT, ValueT, SizeT *, SizeT>::Dispatch(
            temp_space.GetPointer(util::DEVICE), request_bytes, keys, values,
            num_items, num_segments, seg_offsets.GetPointer(util::DEVICE),
            seg_offsets.GetPointer(util::DEVICE) + 1, begin_bit, end_bit, false,
!           stream, debug_synchronous);
    if (retval) return retval;
  
    return retval;
--- 396,417 ----
  
    size_t request_bytes = 0;
    retval =
!       cub::DispatchSegmentedRadixSort<false, KeyT, ValueT, SizeT *, SizeT *, SizeT>::
            Dispatch(NULL, request_bytes, keys, values, num_items, num_segments,
                     seg_offsets.GetPointer(util::DEVICE),
                     seg_offsets.GetPointer(util::DEVICE) + 1, begin_bit, end_bit,
!                    false, stream, debug_synchronous, ptx_version);
    if (retval) return retval;
  
    retval = temp_space.EnsureSize_(request_bytes, util::DEVICE);
    if (retval) return retval;
  
    retval = cub::
!       DispatchSegmentedRadixSort<false, KeyT, ValueT, SizeT *, SizeT *, SizeT>::Dispatch(
            temp_space.GetPointer(util::DEVICE), request_bytes, keys, values,
            num_items, num_segments, seg_offsets.GetPointer(util::DEVICE),
            seg_offsets.GetPointer(util::DEVICE) + 1, begin_bit, end_bit, false,
!           stream, debug_synchronous, ptx_version);
    if (retval) return retval;
  
    return retval;
